# -*- coding: utf-8 -*-
"""MR_DNN.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/18qz-fM9RjIdA5tewKulXuA9nC6-0R85e
"""

import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
from google.colab import files
files.upload()
data = pd.read_csv("data_MR.csv", sep=";")
dataset = data.values
input_data = dataset[:,0:14]
output_data = dataset[: ,14:15]

#Model_1
def build_model():
  model = keras.Sequential([
    layers.Dense(12, activation="relu", input_shape=[14]),
    layers.Dense(4),
    layers.Dense(8, activation="sigmoid"),
    layers.Dense(1)])
  optimizer = tf.keras.optimizers.Adadelta(learning_rate=1, rho=0.8, epsilon=1e-07, name="Adadelta")
  model.compile(loss="mae", optimizer=optimizer, metrics=["mse", "mape", "msle", "logcosh"])
  return model
model = build_model()
history = model.fit(input_data, output_data, validation_split=0.2, epochs=75, verbose=1)
model.save("complete_model_saved.h5")
!mkdir output_folder
!tensorflowjs_converter --input_format keras complete_model_saved.h5 output_folder
!ls output_folder

#Model_2
def build_model():
  model = keras.Sequential([
    layers.Dense(12, activation="relu", input_shape=[14]),
    layers.Dense(8, activation="sigmoid"),
    layers.Dense(1)])
  optimizer = tf.keras.optimizers.RMSprop(0.001)
  model.compile(loss="mae", optimizer=optimizer, metrics=["mse", "mape", "msle", "logcosh"])
  return model
model = build_model()
history = model.fit(input_data, output_data, validation_split=0.2, epochs=100, verbose=1)
model.save("complete_model_saved.h5")
!mkdir output_folder
!tensorflowjs_converter --input_format keras complete_model_saved.h5 output_folder
!ls output_folder